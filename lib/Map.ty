module Trinity
    class Map >> Iterable
        def native initialize

        def native [](key)

        def native []=(key, value)

        def native put(key, value)

        def native remove(key)

        def native clear

        def native keys

        def native values

        def native length

        def toString
            str = '{'
            for i = 0; i < length(); i += 1
                str += keys()[i] + ': ' + values()[i]
                if i < length() - 1
                    str += ', '

            str += '}'
            str

        def iterator
            Trinity.Utils.MapIterator.new(this)

        def each(&block)
            iterator().iterate(block)
