module Trinity
    class String
        def native +(other)

        def native ==(other)

        def native chars

        # String.match returns a Regex instance, which can be used
        # to manipulate capture groups, etc.
        def native match(regex, options = '')

        # String.matches returns a Boolean, which can be used for
        # quick X matches X scenarios
        def native matches(regex, options = '')

        def toString
            this

        def native toUpperCase

        def native toLowerCase

        def native startsWith(prefix)

        def native endsWith(suffix)

        def native contains(str)

        def length
            chars().length()

        def isEmpty
            length() == 0

        def [](obj)
            if obj.isInstance(Range)
                str = ''
                obj.each() |e|
                    str += chars()[e]
                str
            else
                chars()[obj]

        def *(other)
            if other.isNumeric()
                str = ""
                for i = 0; i < other; i += 1
                    str += this
                return str
            else
                return super * other

        def native toInt(radix = 10)

        def native toLong(radix = 10)

        def native toFloat

        def native compareTo(other)

        def native compareToIgnoreCase(other)
